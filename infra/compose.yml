name: devops-final-prj

services:
  backend:
    container_name: backend
    restart: always
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - grafana
      - prometheus
      - alertmanager
    env_file:
      - backend/.env.development

  frontend:
    container_name: frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    env_file:
      - frontend/.env.development
    expose:
      - "5000"

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus-alerts.yml:/etc/prometheus/prometheus-alerts.yml

  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards

  gatling:
    image: denvazh/gatling
    container_name: gatling
    volumes:
      - ./gatling/user-files:/opt/gatling/user-files
      - ./gatling/results:/opt/gatling/results
    entrypoint: [ "/opt/gatling/bin/gatling.sh", "-s", "CrudSimulation" ]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    container_name: logstash
    environment:
      - LS_JAVA_OPTS=-Xms256m -Xmx256m
    volumes:
      - ./monitoring/elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5555:5555"
      - "9600:9600"
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  esdata: