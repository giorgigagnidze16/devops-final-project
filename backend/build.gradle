import com.bmuschko.gradle.docker.tasks.image.Dockerfile

plugins {
    id 'org.springframework.boot' version "${springBoot_version}"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.bmuschko.docker-remote-api' version '9.4.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

//    runtimeOnly 'org.postgresql:postgresql:42.7.3'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    implementation "org.projectlombok:lombok:${lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${lombok_version}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


//Build Dockerfile task
tasks.register('dockerFile', Dockerfile) {
    dependsOn tasks.named('assemble')

    destFile.set(project.file('Dockerfile'))

    from("alpine:3.21.3")
    runCommand('apk add --no-cache openjdk21')
    print("Building Dockerfile for ${project.name}...")
    print("build/libs/${bootJar.archiveFileName.get()}")
    copyFile("build/libs/${bootJar.archiveFileName.get()}", '/app/')
    workingDir('/app/')
    entryPoint('java')
    defaultCommand('-jar', '-Duser.timezone=UTC', "/app/${bootJar.archiveFileName.get()}")
}


test {
    useJUnitPlatform()
}
